apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-operator
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: elasticsearch-operator
rules:
- apiGroups: ["extensions"]
  resources: ["deployments", "replicasets", "daemonsets"]
  verbs: ["create", "get", "update", "delete", "list"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "update", "delete", "list"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "create", "delete", "deletecollection"]
- apiGroups: [""]
  resources: ["persistentvolumes", "persistentvolumeclaims", "services", "secrets", "configmaps"]
  verbs: ["create", "get", "update", "delete", "list"]
- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["create", "get", "deletecollection", "delete"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments"]
  verbs: ["*"]
- apiGroups: ["enterprises.upmc.com"]
  resources: ["elasticsearchclusters"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: elasticsearch-operator
  namespace: logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elasticsearch-operator
subjects:
- kind: ServiceAccount
  name: elasticsearch-operator
  namespace: logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-operator
  namespace: logging
spec:
  selector:
    matchLabels:
      name: elasticsearch-operator
  replicas: 1
  template:
    metadata:
      labels:
        name: elasticsearch-operator
    spec:
      containers:
      - name: operator
        image: upmcenterprises/elasticsearch-operator:0.3.0
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8000
          name: http
        livenessProbe:
          httpGet:
            path: /live
            port: 8000
          initialDelaySeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          timeoutSeconds: 5
      serviceAccount: elasticsearch-operator

---

apiVersion: enterprises.upmc.com/v1
kind: ElasticsearchCluster
metadata:
  name: example-es-cluster
spec:
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.1.3
    image-pull-policy: Always
  cerebro:
    image: upmcenterprises/cerebro:0.7.2
    image-pull-policy: Always
  elastic-search-image: upmcenterprises/docker-elasticsearch-kubernetes:6.1.3_0
  image-pull-policy: Always
  client-node-replicas: 1
  master-node-replicas: 1
  data-node-replicas: 1
  network-host: 0.0.0.0
#  http-port: 9200
  zones: []
  data-volume-size: 10Gi
  master-volume-size: 10Gi
  java-options: "-Xms512m -Xmx512m"
  snapshot:
    scheduler-enabled: false
    bucket-name: elasticsnapshots99
    cron-schedule: "@every 2m"
    image: upmcenterprises/elasticsearch-cron:0.0.4
  storage:
    type: standard
    storage-class-version: volume.alpha.kubernetes.io/storage-class
    volume-reclaim-policy: Delete

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: hostpath-storage
provisioner: kubernetes.io/host-path
